apiVersion: v1
kind: ServiceAccount
metadata:
  name: grafana
  namespace: monitoring
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    # app: grafana
    app.kubernetes.io/name: grafana-deployment
  name: grafana
  namespace: monitoring
spec:
  # replicas: 1
  selector:
    matchLabels:
      # app: grafana
      app.kubernetes.io/name: grafana-deployment
  template:
    metadata:
      labels:
        app: grafana
        app.kubernetes.io/name: grafana-deployment
    spec:
      nodeSelector: 
        storage: "true"
      volumes:
      - name: grafana-storage
        persistentVolumeClaim:
          claimName: pvc-grafana
      containers:
      - image: grafana/grafana:latest
        name: grafana
        ports:
        - containerPort: 3000
          name: grafana-http
        readinessProbe:
          httpGet:
            path: /api/health
            port: grafana-http
        resources:
          limits:
            cpu: 200m
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 100Mi
        volumeMounts:
        - mountPath: /var/lib/grafana
          name: grafana-storage
          readOnly: false
        # nodeSelector:
        # node-type: worker
      initContainers:
      # allow access to PV for any user, prom runs not as a root
      - name: grafana-data-permission-fix
        image: busybox
        command: ["/bin/chmod","-R","777", "/data"]
        volumeMounts:
          - name: grafana-storage
            mountPath: /data
      # securityContext:
      #   fsGroup: 65534
      #   runAsNonRoot: true
      #   runAsUser: 65534
      serviceAccountName: grafana
      
---
apiVersion: v1
kind: Service
metadata:
  namespace: monitoring
  name: grafana-svc
spec:
  type: ClusterIP
  selector:
    app.kubernetes.io/name: grafana-deployment
  ports:
    - protocol: TCP
      port: 8080
      targetPort: grafana-http